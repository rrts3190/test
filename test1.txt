import org.springframework.boot.CommandLineRunner;
import org.springframework.boot.autoconfigure.SpringBootApplication;
import org.springframework.boot.builder.SpringApplicationBuilder;
import org.springframework.context.annotation.Bean;

@SpringBootApplication
public class MySpringBootApplication {

    public static void main(String[] args) {
        new SpringApplicationBuilder(MySpringBootApplication.class)
                .run(args);
    }

    @Bean
    public CommandLineRunner commandLineRunner(FileComparator fileComparator) {
        return args -> {
            if (args.length < 2) {
                System.out.println("Please provide two file names.");
                return;
            }

            String file1Name = args[0];
            String file2Name = args[1];

            fileComparator.compareFiles(file1Name, file2Name);
        };
    }
}


import org.springframework.beans.factory.annotation.Value;
import org.springframework.boot.CommandLineRunner;
import org.springframework.boot.autoconfigure.SpringBootApplication;
import org.springframework.boot.builder.SpringApplicationBuilder;
import org.springframework.context.annotation.PropertySource;

import java.util.Arrays;
import java.util.List;

@SpringBootApplication
@PropertySource("classpath:config1.properties") // Specify the location of the properties file
public class MySpringBootApplication implements CommandLineRunner {

    @Value("${producername}")
    private String producerNamesString;

    public static void main(String[] args) {
        new SpringApplicationBuilder(MySpringBootApplication.class)
                .run(args);
    }

    @Override
    public void run(String... args) throws Exception {
        List<String> producerNames = Arrays.asList(producerNamesString.split(","));
        System.out.println("Producer Names: " + producerNames);
    }
}


import org.springframework.beans.factory.annotation.Value;
import org.springframework.boot.CommandLineRunner;
import org.springframework.boot.autoconfigure.SpringBootApplication;
import org.springframework.boot.builder.SpringApplicationBuilder;

import java.util.Arrays;
import java.util.List;

@SpringBootApplication
public class MySpringBootApplication implements CommandLineRunner {

    @Value("${producername}")
    private String producerNamesString;

    public static void main(String[] args) {
        new SpringApplicationBuilder(MySpringBootApplication.class)
                .run(args);
    }

    @Override
    public void run(String... args) throws Exception {
        if (producerNamesString == null) {
            producerNamesString = "defaultProducer";
        }
        List<String> producerNames = Arrays.asList(producerNamesString.split(","));
        System.out.println("Producer Names: " + producerNames);
    }
}

